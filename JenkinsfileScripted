node {
    stage('clone repo') {
        def repoUrl = scm.getUserRemoteConfigs()[0].getUrl()
        checkout(
            [
                $class: 'GitSCM',
                branches: [
                    [
                        name: "*/master"
                    ]
                ],
                doGenerateSubmoduleConfigurations: false,

                userRemoteConfigs: [
                    [
                        // credentialsId: sshCredentialName,
                        url: repoUrl
                    ]
                ]
            ]
        )
    }


    // stage('build') {
    //     sh 'mvn clean package'
    // }

    stage('Docker image') {
        sh '''
            eval $(minikube docker-env)
            ./mvnw jib:dockerBuild
        '''
    }

    stage('Deploy to test') {
        sh 'kubectl create deployment spring-demo --image=spring-demo:0.0.1-SNAPSHOT'
        sh 'kubectl expose deployment spring-demo --type=NodePort --port=8090'
    }
}